{
    "docs": [
        {
            "location": "/", 
            "text": "Documentation Home\n\n\nLiveForm allows you to make online forms easily. It allows you to use a form without the annoying\niframes and doesn\u2019t impose any pre-built themes on your forms.\n\n\nThe only thing you need to change, to use simple form, is the \naction\n attribute on your form and use the \npost method\n on it.\n\n\nAn example of the form's usage is at \nhttps://liveformhq.com/#contact\n You can checkout the source, it's very simple.\n\n\nform role=\nform\n action=\nhttps://liveformhq.com/form/00a1265d-af82-44dc-aba7-8ef01018c6c3\n method=\nPOST\n accept-charset=\nutf-8\n\n  \ninput type=\nhidden\n name=\nutf8\n value=\n\u2713\n\n  \ninput type=\nhidden\n name=\n_redirect\n value=\nhttps://liveformhq.com/thank_you\n\n\n  \ndiv class=\nform-group\n\n    \nlabel for=\nname\nName\n/label\n\n    \ninput type=\ntext\n class=\nform-control\n name=\nname\n id=\nname\n placeholder=\nName\n\n  \n/div\n\n\n  \ndiv class=\nform-group\n\n    \nlabel for=\nemail\nEmail address\n/label\n\n    \ninput type=\nemail\n class=\nform-control\n name=\nemail\n id=\nemail\n placeholder=\nEmail\n\n  \n/div\n\n\n  \ndiv class=\nform-group\n\n    \nlabel for=\nmessage\nMessage\n/label\n\n    \ntextarea class=\nform-control\n rows=\n5\n name=\nmessage\n id=\nmessage\n placeholder=\nYour message...\n/textarea\n\n  \n/div\n\n\n  \nbutton type=\nsubmit\n class=\nbtn btn-default\nSend Message\n/button\n\n\n/form\n\n\n\n\n\nScreenshot of the above contact form\n\n\n\n\nAs you can see, live form integrates easily and seamlessly into your app. Hope you guys find it useful.\n\n\nFile Uploads\n\n\nFile uploads are very simple using liveform. You can now do file uploads using Liveform.\nYou just need two things to be able to upload files.\n\n\n\n\nMake sure your form has an attribute \nenctype=\"multipart/form-data\"\n\n\nAdd a file field e.g. \ninput type=file name=resume /\n\n\n\n\nThat's it, once you have those, files can be uploaded through your forms.\n\n\nAPI\n\n\nIf you go to the form's API page, you'll see a simple jQuery code snippet which shows you how to\naccess your messages via the API. To access the form submissions you need to pass a url with a valid form id\na valid form api_key and an optional \npage\n parameter. Pagination can be performed using the \npage\n parameter\n\n\nTo see how you can use the API to build an html page app checkout our blog post on\n\n Creating an Imgur clone using Github Pages and Liveform.\n\n\n$.get(\nhttps://api.liveformhq.com/v1/forms/369c5f72-7940-4d20-b3c7-8a963fc49a15/messages\n, {\n    api_key: \n11d43d92-d928-4a8b-b55c-50f98227c794\n,\n    page: 1, // if you don't pass a page param, the first page is returned\n    page_size: 25 // the default page_size is 25, you can pass a value between 1 and 100 as the page_size\n  },\n  function(messages) {\n    console.log(messages)\n  })\n\n\n\n\nHere is a sample response from the API\n\n\n{\n    \nmessages\n: [{\n        \nid\n: \n56c22cba-530e-4f76-9444-ed9fd14688a0\n,\n        \ndata\n: {\n            \ntitle\n: \nAeroplane Rawcode\n,\n            \nupload\n: \nhttps://s3.amazonaws.com/liveform/files/50c662eb-7646-4176-839c-ddea9ea61486/aeroplane.jpg\n\n        },\n        \nform_id\n: \n369c5f72-7940-4d20-b3c7-8a963fc49a15\n,\n        \nrequest_ip\n: \n183.83.175.192\n,\n        \nspam\n: false,\n        \narchived_at\n: null,\n        \ncreated_at\n: \n2016-11-27T19:54:44.993Z\n,\n        \nupdated_at\n: \n2016-11-27T19:54:45.191Z\n\n    }, {\n        \nid\n: \ndbb365db-b929-4a8f-970b-fbfbf83a58f5\n,\n        ...\n    }, { ... }, ...],\n    \nmeta\n: {\n        \ncurrent_page\n: 2,\n        \nnext_page\n: 3,\n        \nprev_page\n: 1,\n        \ntotal_pages\n: 5,\n        \ntotal_count\n: 120,\n        \nnext_link\n: \nhttps://api.liveformhq.com/v1/forms/369c5f72-7940-4d20-b3c7-8a963fc49a15/messages?page=3\n,\n        \nprev_link\n: \nhttps://api.liveformhq.com/v1/forms/369c5f72-7940-4d20-b3c7-8a963fc49a15/messages?page=1\n\n    }\n}", 
            "title": "Home"
        }, 
        {
            "location": "/#documentation-home", 
            "text": "LiveForm allows you to make online forms easily. It allows you to use a form without the annoying\niframes and doesn\u2019t impose any pre-built themes on your forms.  The only thing you need to change, to use simple form, is the  action  attribute on your form and use the  post method  on it.  An example of the form's usage is at  https://liveformhq.com/#contact  You can checkout the source, it's very simple.  form role= form  action= https://liveformhq.com/form/00a1265d-af82-44dc-aba7-8ef01018c6c3  method= POST  accept-charset= utf-8 \n   input type= hidden  name= utf8  value= \u2713 \n   input type= hidden  name= _redirect  value= https://liveformhq.com/thank_you \n\n   div class= form-group \n     label for= name Name /label \n     input type= text  class= form-control  name= name  id= name  placeholder= Name \n   /div \n\n   div class= form-group \n     label for= email Email address /label \n     input type= email  class= form-control  name= email  id= email  placeholder= Email \n   /div \n\n   div class= form-group \n     label for= message Message /label \n     textarea class= form-control  rows= 5  name= message  id= message  placeholder= Your message... /textarea \n   /div \n\n   button type= submit  class= btn btn-default Send Message /button  /form", 
            "title": "Documentation Home"
        }, 
        {
            "location": "/#screenshot-of-the-above-contact-form", 
            "text": "As you can see, live form integrates easily and seamlessly into your app. Hope you guys find it useful.", 
            "title": "Screenshot of the above contact form"
        }, 
        {
            "location": "/#file-uploads", 
            "text": "File uploads are very simple using liveform. You can now do file uploads using Liveform.\nYou just need two things to be able to upload files.   Make sure your form has an attribute  enctype=\"multipart/form-data\"  Add a file field e.g.  input type=file name=resume /   That's it, once you have those, files can be uploaded through your forms.", 
            "title": "File Uploads"
        }, 
        {
            "location": "/#api", 
            "text": "If you go to the form's API page, you'll see a simple jQuery code snippet which shows you how to\naccess your messages via the API. To access the form submissions you need to pass a url with a valid form id\na valid form api_key and an optional  page  parameter. Pagination can be performed using the  page  parameter  To see how you can use the API to build an html page app checkout our blog post on  Creating an Imgur clone using Github Pages and Liveform.  $.get( https://api.liveformhq.com/v1/forms/369c5f72-7940-4d20-b3c7-8a963fc49a15/messages , {\n    api_key:  11d43d92-d928-4a8b-b55c-50f98227c794 ,\n    page: 1, // if you don't pass a page param, the first page is returned\n    page_size: 25 // the default page_size is 25, you can pass a value between 1 and 100 as the page_size\n  },\n  function(messages) {\n    console.log(messages)\n  })  Here is a sample response from the API  {\n     messages : [{\n         id :  56c22cba-530e-4f76-9444-ed9fd14688a0 ,\n         data : {\n             title :  Aeroplane Rawcode ,\n             upload :  https://s3.amazonaws.com/liveform/files/50c662eb-7646-4176-839c-ddea9ea61486/aeroplane.jpg \n        },\n         form_id :  369c5f72-7940-4d20-b3c7-8a963fc49a15 ,\n         request_ip :  183.83.175.192 ,\n         spam : false,\n         archived_at : null,\n         created_at :  2016-11-27T19:54:44.993Z ,\n         updated_at :  2016-11-27T19:54:45.191Z \n    }, {\n         id :  dbb365db-b929-4a8f-970b-fbfbf83a58f5 ,\n        ...\n    }, { ... }, ...],\n     meta : {\n         current_page : 2,\n         next_page : 3,\n         prev_page : 1,\n         total_pages : 5,\n         total_count : 120,\n         next_link :  https://api.liveformhq.com/v1/forms/369c5f72-7940-4d20-b3c7-8a963fc49a15/messages?page=3 ,\n         prev_link :  https://api.liveformhq.com/v1/forms/369c5f72-7940-4d20-b3c7-8a963fc49a15/messages?page=1 \n    }\n}", 
            "title": "API"
        }, 
        {
            "location": "/special_variables/", 
            "text": "There are a few special variables which can be used with LiveForm. Here is a complete list of them and their purpose.\n\n\n1. _noredirect\n\n\nIf you pass this the with the form submission, the response will not return a redirect.\n\n\ncurl -X POST \\\n  --data \nname=Khaja Muzaffaruddin\n \\\n  --data \nbio=Awesome dude\n \\\n  https://liveformhq.com/form/27fb4351-d2f7-45d3-96ac-8dae0eda2d26?_noredirect\n\n\n\n\nThe \n_noredirect\n parameter can be appended the url as a query string like above. Or it can be set using a hidden input field.\n\n\nThe resposne to this will be\n\n\nHTTP/1.1 200 OK\n...\n\n\n\n\n2. _redirect\n\n\nPassing an input parameter with this name will redirect the user to its value. For instance in the example below, once the user submits\nthe form, he will be redirected to \nhttps://awesome.com/thank-you#thanks\n\n\ncurl -X POST \\\n  --data \"Zainab\" \\\n  --data \"bio=Awesome dude\" \\\n  --data \"_redirect=https://awesome.com/thank-you#thanks\" \\\n  https://liveformhq.com/form/27fb4351-d2f7-45d3-96ac-8dae0eda2d26?_noredirect\n\n\nThis can be used to redirect the user to a thank you page. If you don't have a dedicated thank you page, you can still append a \"#thank-you\" fragment to the form's url\nand show a thank you message via javascript if it is present.\n\n\nPlease note that this should be a full url and not a relative url. e.g. passing \"/thanks\" in _redirect will not work.\n\n\n3. g-recaptcha-response\n\n\nThis holds the recaptcha response for your form, if you are using google's recaptcha. We use this data to verify if a message is spam.\n\n\n4. _utf8\n\n\nYou can add an input field with a name \n_utf8\n and set it to a unicode character like the \u2713 mark. The purpose of this is explained here: http://stackoverflow.com/a/3348524/24105", 
            "title": "Special Variables"
        }, 
        {
            "location": "/special_variables/#1-_noredirect", 
            "text": "If you pass this the with the form submission, the response will not return a redirect.  curl -X POST \\\n  --data  name=Khaja Muzaffaruddin  \\\n  --data  bio=Awesome dude  \\\n  https://liveformhq.com/form/27fb4351-d2f7-45d3-96ac-8dae0eda2d26?_noredirect  The  _noredirect  parameter can be appended the url as a query string like above. Or it can be set using a hidden input field.  The resposne to this will be  HTTP/1.1 200 OK\n...", 
            "title": "1. _noredirect"
        }, 
        {
            "location": "/special_variables/#2-_redirect", 
            "text": "Passing an input parameter with this name will redirect the user to its value. For instance in the example below, once the user submits\nthe form, he will be redirected to  https://awesome.com/thank-you#thanks  curl -X POST \\\n  --data \"Zainab\" \\\n  --data \"bio=Awesome dude\" \\\n  --data \"_redirect=https://awesome.com/thank-you#thanks\" \\\n  https://liveformhq.com/form/27fb4351-d2f7-45d3-96ac-8dae0eda2d26?_noredirect  This can be used to redirect the user to a thank you page. If you don't have a dedicated thank you page, you can still append a \"#thank-you\" fragment to the form's url\nand show a thank you message via javascript if it is present.  Please note that this should be a full url and not a relative url. e.g. passing \"/thanks\" in _redirect will not work.", 
            "title": "2. _redirect"
        }, 
        {
            "location": "/special_variables/#3-g-recaptcha-response", 
            "text": "This holds the recaptcha response for your form, if you are using google's recaptcha. We use this data to verify if a message is spam.", 
            "title": "3. g-recaptcha-response"
        }, 
        {
            "location": "/special_variables/#4-_utf8", 
            "text": "You can add an input field with a name  _utf8  and set it to a unicode character like the \u2713 mark. The purpose of this is explained here: http://stackoverflow.com/a/3348524/24105", 
            "title": "4. _utf8"
        }
    ]
}